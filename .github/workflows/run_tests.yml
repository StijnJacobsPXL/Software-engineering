name: code_checks

# Controls when the action will run.
on: [push]

jobs:
  tests:
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        os: [windows-latest, ubuntu-latest]
    name: Run UnitTests
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[development]" --use-feature=in-tree-build
      - name: Run the tests with pytest suite
        run: pytest
        # run: python -m -n auto pytest test

  linter:
    name: Indentation Linter
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint
          # pip install -r requirements.txt
      - name: Lint with pylint
        run: |
          python -m pylint --disable=all -e W0311 --jobs=0 --indent-string='    ' **/*.py

  autopep8:
    name: autopep8 formatter
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: autopep8
        uses: peter-evans/autopep8@v1
        with:
          args: --recursive --in-place --max-line-length=180 .
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: autopep8 action fixes
          title: Fixes by autopep8 action
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          reviewers: timmermansjoy
          branch: autopep8-patches

  build:
    name: Createt artifact
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: ["build", "autopep8"]
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "3TINA"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CA1B7469048F4FDAAD7180596144666A }}
